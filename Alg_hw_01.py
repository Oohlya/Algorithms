__author__ = 'Рина Зубко'

# 1. Найти сумму и произведение цифр трехзначного числа, которое вводит пользователь.

number = input('Введите целое трехзначное число: ')
digits = [int(i) for i in number]

digit_sum = sum(digits)
digit_product = digits[0] * digits[1] * digits[2]

print('Сумма цифр числа равна', digit_sum)
print('Произведение цифр числа равно', digit_product)

# 2. Выполнить логические побитовые операции «И», «ИЛИ» и др. над числами 5 и 6.
#    Выполнить над числом 5 побитовый сдвиг вправо и влево на два знака.Объяснить полученный результат.

a = 5	# a = 0000 0101		в бинарной системе
b = 6	# b = 0000 0110		в бинарной системе

c = a & b
print('Значение a & b равно', c)
# Бинарный "И" оператор, копирует бит в результат только если бит присутствует в обоих операндах.
# => a & b = c = 0000 0100 равно 4 в десятичной системе

c = a | b
print('Значение a | b равно', c)
# Бинарный "ИЛИ" оператор копирует бит, если тот присутствует в хотя бы в одном операнде.
# => a | b = c = 0000 0111 равно 7 в десятичной системе

c = a ^ b
print('Значение a & b равно', c)
# Бинарный "Исключительное ИЛИ" оператор копирует бит только если бит присутствует в одном из операндов, но не в обоих сразу.
# => a ^ b = c = 0000 0011 равно 3 в десятичной системе

a >> 2	# теперь a = 0000 0001
a << 2	# теперь а = 0000 0100 что равно 4 в десятичной системе

print('Значение a после побитового сдвига вправо и влево на два знака равно', a)

# 3. По введенным пользователем координатам двух точек вывести уравнение прямой вида y=kx+b, проходящей через эти точки.

x1 = int(input('Введите координату x1 первой точки: '))
y1 = int(input('Введите координату y1 первой точки: '))
x2 = int(input('Введите координату x2 второй точки: '))
y2 = int(input('Введите координату y2 второй точки: '))

k = (y2 - y1) / (x2 - x1)
b = y1 - x1 * k

print(f'Уравнением прямой вида y=kx+b, проходящей через эти точки, является: y = {k}x + {b}')

# 4. Написать программу, которая генерирует в указанных пользователем границах:
#    - случайное целое число;
#    - случайное вещественное число;
#    - случайный символ.
#    Для каждого из трех случаев пользователь задает свои границы диапазона.
#	 Например, если надо получить случайный символ от 'a' до 'f', то вводятся эти символы.
#	 Программа должна вывести на экран любой символ алфавита от 'a' до 'f' включительно.

import random
import string

# случайное целое число

start_int = int(input('Укажите начало интервала для случайного целого числа: '))
end_int = int(input('Укажите конец интервала для случайного целого числа: '))

rand_int = random.randint(start_int, end_int)
print('Случайное целое число равно:', rand_int)

# случайное вещественное число

start_float = float(input('Укажите начало интервала для случайного вещественного числа: '))
end_float = float(input('Укажите конец интервала для случайного вещественного числа: '))

rand_float = random.uniform(start_float, end_float)
print('Случайное вещественное число равно:', rand_float)

# случайный символ

alphabet = string.ascii_lowercase

start_letter = alphabet.index(input('Укажите букву латинского алфавита в начале интервала для случайного символа: '))
end_letter = alphabet.index(input('Укажите букву латинского алфавита в конце интервала для случайного символа: '))

rand_letter = random.choice(alphabet[start_letter : end_letter + 1])

print('Случайный символ:', rand_letter)

# 5. Пользователь вводит две буквы. Определить, на каких местах алфавита они стоят и сколько между ними находится букв.

import string

alphabet = string.ascii_lowercase
print(alphabet)

letter1 = alphabet.index(input('Укажите любую букву латинского алфавита: ')) + 1
letter2 = alphabet.index(input('Укажите ещё одну букву латинского алфавита: ')) + 1

if letter1 < letter2:
	letters_between = letter2 - letter1 - 1
else:
	letters_between = letter1 - letter2 - 1

print(f'Первая буква находится на {letter1} месте алфавита, а вторая буква на {letter2} месте. И между ними находится {letters_between} букв(ы).')

# 6. Пользователь вводит номер буквы в алфавите. Определить, какая это буква.

import string

alphabet = string.ascii_lowercase
print(alphabet)

letter_num = int(input('Укажите любой номер буквы латинского алфавита: '))
letter = alphabet[letter_num - 1]

print(f'Под номером {letter_num} находится буква {letter}.')

# 7. По длинам трех отрезков, введенных пользователем, определить возможность существования треугольника, 
#	 составленного из этих отрезков. Если такой треугольник существует, то определить, является ли он разносторонним,
#	 равнобедренным или равносторонним.

a = int(input('Введите длину стороны a треугольника: '))
b = int(input('Введите длину стороны b треугольника: '))
c = int(input('Введите длину стороны c треугольника: '))

if (a + b > c) and (a + c > b) and (b + c > a):
	print('Треугольник с такими сторонами может существовать.')
else:
	print('Треугольник с такими сторонами не существует.')

if a == b == c:
	print('И он будет равносторонним.')
elif a == b or b == c or a == c:
	print('И он будет равнобедренным.')
else:
	print('И он будет разносторонним')

# 8. Определить, является ли год, который ввел пользователем, високосным или невисокосным.

year = int(input('Введите год: '))

if year % 4 != 0 or (year % 100 == 0 and year % 400 != 0):
	print('Год невисокосный')
else:
	print('Год високосный')

# 9. Вводятся три разных числа. Найти, какое из них является средним (больше одного, но меньше другого).

a = int(input('Введите число a: '))
b = int(input('Введите число b: '))
c = int(input('Введите число c: '))

if a > b:
	if b > c:
		print('Средние число b: ', b)
	else:
		print('Средние число c: ', c)
else:
	if a > c:
		print('Средние число a: ', a)
	else:
		print('Средние число c: ', c)
